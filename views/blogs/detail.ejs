<%- include("../partials/head.ejs") %>
<body>
  <%- include('../partials/nav.ejs') %>

  <nav
    aria-label="Breadcrumb"
    class="mb-3 d-flex justify-content-between align-items-center"
  >
    <a
      class="icon-link icon-link-hover d-flex align-items-center"
      href="/blogs"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="bi"
        viewBox="0 0 16 16"
        aria-hidden="true"
        width="16"
        height="16"
        fill="currentColor"
        focusable="false"
      >
        <path
          fill-rule="evenodd"
          d="M15 8a.5.5 0 0 1-.5.5H2.707l3.147 3.146a.5.5 0 0 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 7.5H14.5a.5.5 0 0 1 .5.5z"
        />
      </svg>
      <span class="ms-1">Back to Blogs</span>
    </a>

    <% if (blog.profile.user.equals(user._id)) { %>
    <div class="d-flex gap-2">
      <button
        class="btn btn-danger delete"
        data-doc="<%= blog._id %>"
        aria-label="Delete blog post"
        type="button"
      >
        <i class="bi bi-trash" aria-hidden="true"></i>
      </button>

      <%- include("./editModal", { blog }) %>
    </div>
    <% } %>
  </nav>

  <main class="container pb-5" role="main">
    <div class="row">
      <div class="col-lg-8">
        <article
          class="card shadow-lg"
          aria-labelledby="blog-title"
          tabindex="-1"
        >
          <% if (blog.image && blog.image.filename) { %>
          <img
            src="/uploads/<%= blog.image.filename %>"
            class="card-img-top"
            style="height: 300px; object-fit: cover"
            alt="<%= blog.title %> featured image"
          />
          <% } %>
          <div class="card-body">
            <h2 id="blog-title" class="card-title mb-3"><%= blog.title %></h2>
            <p class="card-text fs-5"><%= blog.body %></p>
          </div>
        </article>
        <div
          class="card-footer d-flex justify-content-between align-items-center flex-wrap px-4 py-3 gap-3"
        >
          <div class="d-flex align-items-center gap-2">
            <button
              class="btn btn-outline-danger btn-sm d-flex align-items-center gap-1 like-button"
              id="like-dislike-button"
              data-type="<%= (blog.likes.map(like =>
            like.toString()).includes(currentProfileId)) ? "dislike" : "like" %>"
              data-id="<%= blog._id %>"
              aria-label="<%= blog.likes.includes(user._id) ? 'Unlike' : 'Like' %> this blog"
              aria-pressed="<%= blog.likes.includes(user._id) %>"
            >
              <% if (blog.likes.includes(user._id)) { %>
              <i class="bi bi-heart-fill text-danger" aria-hidden="true"></i>
              <% } else { %>
              <i class="bi bi-heart" aria-hidden="true"></i>
              <% } %>
              <span
                ><%= blog.likes.length %> Like<%= blog.likes.length === 1 ? '' :
                's' %></span
              >
            </button>
            
            <%- include('./commentModal.ejs', { comments: blog.comments, blogId: blog._id }) %> 
          </div>
        </div>
      </div>

      <aside
        class="col-lg-4 mt-4 mt-lg-0"
        aria-label="Author information and blog metadata"
      >
        <div class="card shadow-sm">
          <div class="card-body text-center">
            <div class="mb-3">
              <% if (blog.profile.image) { %>
              <img
                src="/uploads/<%= blog.profile.image.filename %>"
                alt="Profile image of <%= blog.profile.firstName %> <%= blog.profile.lastName %>"
                class="img-thumbnail rounded-circle mb-3 mx-auto shadow"
                style="width: 70px; height: 70px; object-fit: cover"
              />
              <% } else { %>
              <div
                class="rounded-circle bg-primary text-white d-inline-flex justify-content-center align-items-center"
                style="width: 60px; height: 60px; font-size: 1.5rem"
                aria-label="Author initial <%= blog.profile.firstName.charAt(0) %>"
                role="img"
              >
                <%= blog.profile.firstName.charAt(0) %>
              </div>
              <% } %>
              <h6 class="mt-2 mb-0">
                <%= blog.profile.firstName %> <%= blog.profile.lastName %>
              </h6>
              <p class="text-muted small mb-0">Author</p>
            </div>

            <hr />

            <h6 id="tags-label">Tags</h6>
            <div
              class="d-flex flex-wrap gap-2 justify-content-center"
              aria-labelledby="tags-label"
            >
              <% if (blog.tags && blog.tags.length > 0) { %> <%
              blog.tags.forEach(tag => { %>
              <span class="badge bg-secondary"><%= tag.label %></span>
              <% }) %> <% } else { %>
              <span class="text-muted small">No tags added</span>
              <% } %>
            </div>
          </div>
        </div>
      </aside>
    </div>

    <div
      id="delete-status"
      class="visually-hidden"
      aria-live="polite"
      role="status"
    ></div>
  </main>

  <%- include('../partials/footer.ejs') %>

  <script>
    const commentModals = document.querySelectorAll(".commentModal");    
    const trashButton = document.querySelector(".delete");
    const likeDislikeButton = document.getElementById("like-dislike-button");

    const addComment = (comment, modal) => {
      const modalFooter = modal.querySelector(".modal-footer");
      
      let commentList = modalFooter.querySelector(".d-flex.flex-column");
      const noCommentsPlaceholder = modalFooter.querySelector(".text-muted");
      
      if (!commentList) {
        noCommentsPlaceholder.remove();
        commentList = document.createElement("div");
        commentList.className = "d-flex flex-column w-100";
        modalFooter.append(commentList);
      }

      // Create the comment card
      const commentCard = document.createElement("div");
      commentCard.className = "card mb-2 w-100 animate__animated animate__fadeInDown";
      commentCard.style.backgroundColor = "#e9f5ff";

      commentCard.innerHTML = `
        <div class="card-body d-flex align-items-start">
          <img
            src="/uploads/${comment.author.image.filename}"
            alt="Profile Image of ${comment.author.firstName} ${comment.author.lastName}"
            class="rounded-circle shadow me-3"
            style="width: 40px; height: 40px; object-fit: cover"
          />
          <div class="flex-grow-1">
            <div class="d-flex mb-1 fw-bold w-100">
              <p class="mb-0">${comment.author.firstName} ${comment.author.lastName}</p>
              <small class="ms-auto text-muted">
                ${new Date(comment.createdAt).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </small>
            </div>
            <p class="mb-0">${comment.content}</p>
          </div>
        </div>
      `;

      commentList.prepend(commentCard);
      modal.querySelector("form").reset();
    };

    commentModals.forEach(modal => {
      const form = modal.querySelector("form");
      form.reset();
      form.addEventListener("submit",  async (e) => {
        e.preventDefault();

        try {
          const result = await fetch("/api/comment", {
            method: "POST",
            body: JSON.stringify({
              content: form.content.value,
              blogId: form.blogId.value
            }),
            headers: {
              "Content-Type": "application/json"
            }
          })
          
          if (!result.ok){
            throw new Error("Can't save comment!")
          }
          const { newComment } = await result.json()
          addComment(newComment, modal);
        } catch (err) {
          // TODO: Show toast here!
          console.log("Error while saving the comment", err.message)
        }
      })
    })

    likeDislikeButton.addEventListener("click", async () => {
      const type = likeDislikeButton.dataset.type;
      const blogId = likeDislikeButton.dataset.id;
      
      try {
        const res = await fetch(`/api/blogs/${blogId}/${type}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
        });
        if (res.ok) {
          // TODO: Toggle UI state
          location.reload();
        }
      } catch(err) {
        console.log(`Failed to ${type} blog`, err.message)
      }
    });

    trashButton?.addEventListener("click", (event) => {
      event.preventDefault();
      const endpoint = `/blogs/${trashButton.dataset.doc}`;

      if (confirm("Are you sure you want to delete this blog?")) {
        fetch(endpoint, {
          method: "DELETE",
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.redirect) {
              window.location.href = data.redirect;
            } else {
              document.getElementById("delete-status").textContent =
                "Failed to delete blog.";
            }
          })
          .catch((err) => {
            console.error(
              `Error deleting blog ${trashButton.dataset.doc}:`,
              err
            );
            document.getElementById("delete-status").textContent =
              "An error occurred while deleting.";
          });
      }
    });
  </script>
</body>
