<%- include("../partials/head.ejs") %> <%- include("../partials/nav.ejs") %>

<main
  class="card auth-form-width-custom mx-auto shadow-lg"
  role="main"
  aria-labelledby="login-title"
>
  <div class="card-body">
    <h1 id="login-title" class="h3 mb-4 text-center">Login</h1>
    <form
      class="needs-validation"
      novalidate
      aria-describedby="form-errors"
      aria-live="polite"
      aria-labelledby="form-instructions"
    >
      <h2 id="form-instructions" class="visually-hidden">
        Login form: enter your email and password
      </h2>

      <noscript>
        <p class="alert alert-warning" role="alert">
          JavaScript is disabled in your browser. This form requires JavaScript
          to submit properly.
        </p>
      </noscript>

      <div class="form-floating mb-3">
        <input
          type="email"
          class="form-control"
          id="email"
          name="email"
          placeholder="name@example.com"
          required
          aria-required="true"
          aria-describedby="email-error"
          aria-invalid="false"
          autocomplete="username"
        />
        <label for="email">Email address</label>
        <div
          id="email-error"
          class="invalid-feedback"
          role="alert"
          aria-live="assertive"
        ></div>
      </div>

      <div class="form-floating">
        <input
          type="password"
          class="form-control"
          id="password"
          name="password"
          placeholder="Password"
          required
          aria-required="true"
          aria-describedby="password-error"
          aria-invalid="false"
          autocomplete="current-password"
        />
        <label for="password">Password</label>
        <div
          id="password-error"
          class="invalid-feedback"
          role="alert"
          aria-live="assertive"
        ></div>
      </div>

      <div
        id="form-errors"
        class="visually-hidden"
        role="alert"
        aria-live="assertive"
      ></div>

      <button
        class="btn btn-primary w-100 mt-4"
        type="submit"
        aria-describedby="form-instructions"
      >
        Login
      </button>
    </form>
  </div>
</main>

<script>
  const form = document.querySelector("form");
  const emailInput = form.email;
  const passwordInput = form.password;
  const emailErrorDiv = document.getElementById("email-error");
  const passwordErrorDiv = document.getElementById("password-error");
  const formErrorsDiv = document.getElementById("form-errors");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Reset previous errors and aria-invalid
    emailInput.classList.remove("is-invalid");
    passwordInput.classList.remove("is-invalid");
    emailInput.setAttribute("aria-invalid", "false");
    passwordInput.setAttribute("aria-invalid", "false");
    emailErrorDiv.textContent = "";
    passwordErrorDiv.textContent = "";
    formErrorsDiv.textContent = "";

    let hasError = false;

    if (!emailInput.value.trim()) {
      emailInput.classList.add("is-invalid");
      emailInput.setAttribute("aria-invalid", "true");
      emailErrorDiv.textContent = "Email is required.";
      hasError = true;
    }

    if (!passwordInput.value.trim()) {
      passwordInput.classList.add("is-invalid");
      passwordInput.setAttribute("aria-invalid", "true");
      passwordErrorDiv.textContent = "Password is required.";
      hasError = true;
    }

    if (hasError) return;

    try {
      const response = await fetch("/api/login", {
        method: "POST",
        body: JSON.stringify({
          email: emailInput.value.trim(),
          password: passwordInput.value.trim(),
        }),
        headers: { "Content-Type": "application/json" },
      });

      const data = await response.json();

      if (data.errors) {
        if (data.errors.email) {
          emailInput.classList.add("is-invalid");
          emailInput.setAttribute("aria-invalid", "true");
          emailErrorDiv.textContent = data.errors.email;
        }
        if (data.errors.password) {
          passwordInput.classList.add("is-invalid");
          passwordInput.setAttribute("aria-invalid", "true");
          passwordErrorDiv.textContent = data.errors.password;
        }
        return;
      }

      if (data.user && data.nextUrl) {
        location.assign(data.nextUrl);
      } else {
        formErrorsDiv.textContent = "Unexpected response. Please try again.";
      }
    } catch (error) {
      formErrorsDiv.textContent =
        "An error occurred during login. Please try again later.";
      console.error(
        "Login View: Error occurred during login post method!",
        error
      );
    }
  });
</script>

<%- include("../partials/footer.ejs") %>
